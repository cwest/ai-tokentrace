# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

[project]
name = "ai-tokentrace"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
authors = [
    { name = "Casey West", email = "casey@geeknest.com" }
]
requires-python = ">=3.9"
dependencies = [
    "google-genai>=1.46.0",
    "pydantic>=2.12.3",
    "aiofiles>=23.2.1",
]

[project.optional-dependencies]
firestore = ["google-cloud-firestore>=2.11.0"]
pubsub = ["google-cloud-pubsub>=2.13.0"]
adk = ["google-adk>=0.16.0"]

[build-system]
requires = ["uv_build>=0.9.4,<0.10.0"]
build-backend = "uv_build"

[dependency-groups]
dev = [
    "poethepoet>=0.37.0",
    "pre-commit>=4.3.0",
    "pytest>=8.4.2",
    "pytest-asyncio>=0.21.0",
    "ruff>=0.14.1",
    "honcho>=1.1.0",
    "python-dotenv>=0.21.0",
    "pillow>=11.3.0",
    "google-cloud-firestore>=2.11.0",
    "google-cloud-pubsub>=2.13.0",
    "google-adk>=0.16.0",
]

[tool.poe.tasks]
lint = "ruff check ."
format = "ruff format ."
test = "pytest -m 'not integration'"

# Integration testing tasks
health-check = { cmd = "uv run python scripts/health_check.py", envfile = ".env.dev" }
start-emulators = { shell = """
  test -s "$HOME/.sdkman/bin/sdkman-init.sh" && source "$HOME/.sdkman/bin/sdkman-init.sh"
  uv run honcho -e .env.dev -f Procfile.dev start &
""" }
stop-emulators = { shell = "pkill -f 'cloud-firestore-emulator|cloud-pubsub-emulator|honcho' || true" }
run-integration-tests = { cmd = "uv run pytest -m integration", envfile = ".env.dev" }
test-integration = { shell = """
  function cleanup() {
    echo ">>> Cleaning up emulator processes..."
    uv run poe stop-emulators
  }
  trap cleanup EXIT

  # Ensure a clean slate before starting
  uv run poe stop-emulators
  
  uv run poe start-emulators && uv run poe health-check && uv run poe run-integration-tests
""" }


[tool.pytest.ini_options]
asyncio_mode = "auto"
addopts = [
    "--import-mode=importlib",
]
markers = [
    "integration: marks tests as integration tests",
]
